{"ast":null,"code":"import _regeneratorRuntime from\"/Users/fms/Web Projects/ReactWebServer/Homepage/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/fms/Web Projects/ReactWebServer/Homepage/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{buttonStore}from\"./store\";import moment from\"moment\";export var getFirstComic=function getFirstComic(sentType){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var url,response,num;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url='https://xkcd.now.sh/?comic=1';_context.next=3;return fetch(url).then(function(res){return res.json();});case 3:response=_context.sent;num=parseInt(response.num);buttonStore.dispatch({type:sentType,payload:{url:'https://xkcd.now.sh/?comic=',month:response.month,num:num,year:response.year,news:response.news,safe_title:response.safe_title,transcript:response.transcript,alt:response.alt,img:response.img,title:response.title,day:response.day}});case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};export var getPreviousComic=function getPreviousComic(sentType){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var bs,urlInt,url,response,num;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:bs=buttonStore.getState();urlInt=parseInt(bs.num);url='https://xkcd.now.sh/?comic='+(urlInt-1);_context2.next=5;return fetch(url).then(function(res){return res.json();});case 5:response=_context2.sent;num=parseInt(response.num);buttonStore.dispatch({type:\"PREVIOUS\",payload:{url:'https://xkcd.now.sh/?comic=',month:response.month,num:num,year:response.year,news:response.news,safe_title:response.safe_title,transcript:response.transcript,alt:response.alt,img:response.img,title:response.title,day:response.day}});case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}();};export var getNextComic=function getNextComic(sentType){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var bs,urlInt,url,response,num;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:bs=buttonStore.getState();urlInt=parseInt(bs.num);url='https://xkcd.now.sh/?comic='+(urlInt+1);_context3.next=5;return fetch(url).then(function(res){return res.json();});case 5:response=_context3.sent;num=parseInt(response.num);buttonStore.dispatch({type:\"NEXT\",payload:{url:'https://xkcd.now.sh/?comic=',month:response.month,num:num,year:response.year,news:response.news,safe_title:response.safe_title,transcript:response.transcript,alt:response.alt,img:response.img,title:response.title,day:response.day}});case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5,_x6){return _ref3.apply(this,arguments);};}();};export var getRandomComic=function getRandomComic(sentType){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var randomNum,url,response,num;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:randomNum=Math.ceil(Math.random()*100);url='https://xkcd.now.sh/?comic='+randomNum;_context4.next=4;return fetch(url).then(function(res){return res.json();});case 4:response=_context4.sent;num=parseInt(response.num);buttonStore.dispatch({type:sentType,payload:{url:'https://xkcd.now.sh/?comic=',month:response.month,num:num,year:response.year,news:response.news,safe_title:response.safe_title,transcript:response.transcript,alt:response.alt,img:response.img,title:response.title,day:response.day}});case 7:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x7,_x8){return _ref4.apply(this,arguments);};}();};export var getLastComic=function getLastComic(sentType){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch,getState){var url,response,num;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:url='https://xkcd.now.sh/?comic=latest';_context5.next=3;return fetch(url).then(function(res){return res.json();});case 3:response=_context5.sent;num=parseInt(response.num);buttonStore.dispatch({type:sentType,payload:{url:'https://xkcd.now.sh/?comic=',month:response.month,num:num,year:response.year,news:response.news,safe_title:response.safe_title,transcript:response.transcript,alt:response.alt,img:response.img,title:response.title,day:response.day}});case 6:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x9,_x10){return _ref5.apply(this,arguments);};}();};export var addComment=function addComment(sentType,setUserName,setUserComment){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch,getState){var bs,urlInt;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:bs=buttonStore.getState();urlInt=parseInt(bs.num);buttonStore.dispatch({type:sentType,payload:{newComment:{comicNum:urlInt,userName:setUserName,userComment:setUserComment,time:moment().format('LLL')}}});case 3:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x11,_x12){return _ref6.apply(this,arguments);};}();};export var addStars=function addStars(sentType,setRating,needsParsing){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch,getState){var bs,stars,comicNumber;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:bs=buttonStore.getState();comicNumber=parseInt(bs.num);if(needsParsing){stars=parseInt(setRating);}else{stars=setRating;}buttonStore.dispatch({type:sentType,payload:{newRating:{comicNum:comicNumber,stars:stars}}});case 4:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x13,_x14){return _ref7.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/fms/Web Projects/ReactWebServer/Homepage/src/Data/asyncActions.js"],"names":["buttonStore","moment","getFirstComic","sentType","dispatch","getState","url","fetch","then","res","json","response","num","parseInt","type","payload","month","year","news","safe_title","transcript","alt","img","title","day","getPreviousComic","bs","urlInt","getNextComic","getRandomComic","randomNum","Math","ceil","random","getLastComic","addComment","setUserName","setUserComment","newComment","comicNum","userName","userComment","time","format","addStars","setRating","needsParsing","comicNumber","stars","newRating"],"mappings":"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","sourcesContent":["import {buttonStore} from \"./store\";\nimport moment from \"moment\";\n\nexport const getFirstComic = (sentType) => async (dispatch, getState) => {\n    const url = 'https://xkcd.now.sh/?comic=1';\n    const response = await fetch(url)\n        .then(res => res.json());\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\n\nexport const getPreviousComic = (sentType) => async (dispatch, getState) => {\n    let bs = buttonStore.getState();\n    const urlInt = parseInt(bs.num);\n    const url = 'https://xkcd.now.sh/?comic=' + (urlInt - 1);\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: \"PREVIOUS\",\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\nexport const getNextComic = (sentType) => async (dispatch, getState) => {\n    let bs = buttonStore.getState();\n    const urlInt = parseInt(bs.num);\n    const url = 'https://xkcd.now.sh/?comic=' + (urlInt + 1);\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: \"NEXT\",\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\nexport const getRandomComic = (sentType) => async (dispatch, getState) => {\n    let randomNum = (Math.ceil(Math.random() * 100));\n    const url = 'https://xkcd.now.sh/?comic=' + (randomNum);\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\n\nexport const getLastComic = (sentType) => async (dispatch, getState) => {\n    const url = 'https://xkcd.now.sh/?comic=latest';\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\n\nexport const addComment = (sentType, setUserName, setUserComment) => async (dispatch, getState) => {\n    let bs = buttonStore.getState();\n    const urlInt = parseInt(bs.num);\n\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            newComment: {\n                comicNum: urlInt,\n                userName: setUserName,\n                userComment: setUserComment,\n                time: moment().format('LLL')\n            }\n        }\n    })\n}\n\nexport const addStars = (sentType, setRating, needsParsing) => async (dispatch, getState) => {\n    let bs = buttonStore.getState();\n    let stars;\n    const comicNumber = parseInt(bs.num);\n    if (needsParsing) {\n        stars = parseInt(setRating);\n    } else {\n        stars = setRating;\n    }\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            newRating: {\n                comicNum: comicNumber,\n                stars: stars\n            }\n        }\n    })\n}\n"]},"metadata":{},"sourceType":"module"}