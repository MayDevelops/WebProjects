{"ast":null,"code":"var _jsxFileName = \"/Users/jmay1126/WebProjects/ReactWebServer/Homepage/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport connect from \"react-redux/lib/connect/connect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst countReducer = function (state = 0, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n\n    case \"DECREMENT\":\n      return state - 1;\n\n    default:\n      return state;\n  }\n};\n\nlet store = createStore(countReducer);\n\nconst Component = () => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"Helloworld React & Redux!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 25\n}, this);\n\n_c = Component;\n\nconst mapStateToProps = state => {\n  return {\n    count: state\n  };\n};\n\nconst Container = connect(mapStateToProps)(Component);\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Helloworld React & Redux!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"sources":["/Users/jmay1126/WebProjects/ReactWebServer/Homepage/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","createStore","Provider","connect","countReducer","state","action","type","store","Component","mapStateToProps","count","Container","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,iCAApB;;;AAEA,MAAMC,YAAY,GAAG,UAAUC,KAAK,GAAG,CAAlB,EAAqBC,MAArB,EAA6B;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAOF,KAAK,GAAG,CAAf;;AACJ,SAAK,WAAL;AACI,aAAOA,KAAK,GAAG,CAAf;;AACJ;AACI,aAAOA,KAAP;AANR;AAQH,CATD;;AAWA,IAAIG,KAAK,GAAGP,WAAW,CAACG,YAAD,CAAvB;;AAEA,MAAMK,SAAS,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;;KAAMA,S;;AAEN,MAAMC,eAAe,GAAGL,KAAK,IAAI;AAC7B,SAAO;AACHM,IAAAA,KAAK,EAAEN;AADJ,GAAP;AAGH,CAJD;;AAKA,MAAMO,SAAS,GAAGT,OAAO,CAACO,eAAD,CAAP,CAAyBD,SAAzB,CAAlB;AAIAX,QAAQ,CAACe,MAAT,eACI,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEL,KAAjB;AAAA,yBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAKIM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALJ,E,CAQA;AACA;AACA;;AACAf,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport connect from \"react-redux/lib/connect/connect\";\n\nconst countReducer = function (state = 0, action) {\n    switch (action.type) {\n        case \"INCREMENT\":\n            return state + 1;\n        case \"DECREMENT\":\n            return state - 1;\n        default:\n            return state;\n    }\n};\n\nlet store = createStore(countReducer);\n\nconst Component = () => <h1>Helloworld React & Redux!</h1>;\n\nconst mapStateToProps = state => {\n    return {\n        count: state\n    };\n};\nconst Container = connect(mapStateToProps)(Component);\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        {/*<App />*/}\n        <h1>Helloworld React & Redux!</h1>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}