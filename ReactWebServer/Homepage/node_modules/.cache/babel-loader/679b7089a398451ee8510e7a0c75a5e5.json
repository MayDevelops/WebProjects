{"ast":null,"code":"import axios from \"axios\";\nexport const buttonReducer = async function (state = {\n  url: 'https://xkcd.now.sh/?comic=latest',\n  month: '5',\n  number: 2465,\n  year: '2021',\n  news: '',\n  safe_title: 'Dimensional Chess',\n  transcript: '',\n  alt: 'In Dimensional Chess, every move is annotated \\'?!\\'.',\n  img: 'https://imgs.xkcd.com/comics/dimensional_chess.png',\n  title: 'Dimensional Chess',\n  day: '19'\n}, action) {\n  switch (action.type) {\n    case \"PREVIOUS\":\n      if (state.number === 1) {\n        return state;\n      } else {\n        console.log('State number: ' + state.number);\n        let stateNum = state.number;\n        let request = axios.get('https://xkcd.now.sh/?comic=' + (stateNum - 1));\n        const response = await request;\n        let data = response.data;\n        console.log(data);\n        return {\n          number: data.num,\n          url: data.link\n        };\n      }\n\n    case \"NEXT\":\n      let stateNum = parseInt(state.number);\n      return {\n        number: state.number + 1,\n        url: 'https://xkcd.now.sh/?comic=' + (stateNum + 1)\n      };\n\n    case \"RANDOM\":\n      let r = Math.ceil(Math.random() * 100);\n      return {\n        number: r,\n        url: 'https://xkcd.now.sh/?comic=' + r\n      };\n\n    default:\n      console.log('State number: ' + state.number);\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/jmay1126/WebProjects/ReactWebServer/Homepage/src/Data/buttonReducer.js"],"names":["axios","buttonReducer","state","url","month","number","year","news","safe_title","transcript","alt","img","title","day","action","type","console","log","stateNum","request","get","response","data","num","link","parseInt","r","Math","ceil","random"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,gBAAgBC,KAAK,GAAG;AACjDC,EAAAA,GAAG,EAAE,mCAD4C;AAEjDC,EAAAA,KAAK,EAAE,GAF0C;AAGjDC,EAAAA,MAAM,EAAE,IAHyC;AAIjDC,EAAAA,IAAI,EAAE,MAJ2C;AAKjDC,EAAAA,IAAI,EAAE,EAL2C;AAMjDC,EAAAA,UAAU,EAAE,mBANqC;AAOjDC,EAAAA,UAAU,EAAE,EAPqC;AAQjDC,EAAAA,GAAG,EAAE,uDAR4C;AASjDC,EAAAA,GAAG,EAAE,oDAT4C;AAUjDC,EAAAA,KAAK,EAAE,mBAV0C;AAWjDC,EAAAA,GAAG,EAAE;AAX4C,CAAxB,EAY1BC,MAZ0B,EAYlB;AACP,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,UAAIb,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACpB,eAAOH,KAAP;AACH,OAFD,MAEO;AACHc,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBf,KAAK,CAACG,MAArC;AACA,YAAIa,QAAQ,GAAGhB,KAAK,CAACG,MAArB;AACA,YAAIc,OAAO,GAAGnB,KAAK,CAACoB,GAAN,CAAU,iCAAiCF,QAAQ,GAAG,CAA5C,CAAV,CAAd;AAEA,cAAMG,QAAQ,GAAG,MAAMF,OAAvB;AACA,YAAIG,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,eAAO;AAACjB,UAAAA,MAAM,EAAEiB,IAAI,CAACC,GAAd;AAAmBpB,UAAAA,GAAG,EAAEmB,IAAI,CAACE;AAA7B,SAAP;AACH;;AACL,SAAK,MAAL;AACI,UAAIN,QAAQ,GAAGO,QAAQ,CAACvB,KAAK,CAACG,MAAP,CAAvB;AACA,aAAO;AAACA,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,GAAe,CAAxB;AAA2BF,QAAAA,GAAG,EAAE,iCAAiCe,QAAQ,GAAG,CAA5C;AAAhC,OAAP;;AACJ,SAAK,QAAL;AACI,UAAIQ,CAAC,GAAIC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,GAA1B,CAAT;AACA,aAAO;AAACxB,QAAAA,MAAM,EAAEqB,CAAT;AAAYvB,QAAAA,GAAG,EAAE,gCAAgCuB;AAAjD,OAAP;;AACJ;AACIV,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBf,KAAK,CAACG,MAArC;AACA,aAAOH,KAAP;AAtBR;AA0BH,CAvCM","sourcesContent":["import axios from \"axios\";\n\nexport const buttonReducer = async function (state = {\n    url: 'https://xkcd.now.sh/?comic=latest',\n    month: '5',\n    number: 2465,\n    year: '2021',\n    news: '',\n    safe_title: 'Dimensional Chess',\n    transcript: '',\n    alt: 'In Dimensional Chess, every move is annotated \\'?!\\'.',\n    img: 'https://imgs.xkcd.com/comics/dimensional_chess.png',\n    title: 'Dimensional Chess',\n    day: '19'\n}, action) {\n    switch (action.type) {\n        case \"PREVIOUS\":\n            if (state.number === 1) {\n                return state;\n            } else {\n                console.log('State number: ' + state.number);\n                let stateNum = state.number;\n                let request = axios.get('https://xkcd.now.sh/?comic=' + (stateNum - 1));\n\n                const response = await request;\n                let data = response.data;\n                console.log(data);\n                return {number: data.num, url: data.link};\n            }\n        case \"NEXT\":\n            let stateNum = parseInt(state.number);\n            return {number: state.number + 1, url: 'https://xkcd.now.sh/?comic=' + (stateNum + 1)};\n        case \"RANDOM\":\n            let r = (Math.ceil(Math.random() * 100));\n            return {number: r, url: 'https://xkcd.now.sh/?comic=' + r};\n        default:\n            console.log('State number: ' + state.number);\n            return state;\n    }\n\n\n};\n\n"]},"metadata":{},"sourceType":"module"}