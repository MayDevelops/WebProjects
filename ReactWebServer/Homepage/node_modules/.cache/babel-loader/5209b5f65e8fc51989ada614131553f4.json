{"ast":null,"code":"import { buttonStore } from \"./store\";\nexport const getFirstComic = sentType => async (dispatch, getState) => {\n  const url = 'https://xkcd.now.sh/?comic=1';\n  const response = await fetch(url).then(res => res.json());\n  console.log(response);\n  let num = parseInt(response.num);\n  buttonStore.dispatch({\n    type: sentType,\n    payload: {\n      url: 'https://xkcd.now.sh/?comic=',\n      month: response.month,\n      num: num,\n      year: response.year,\n      news: response.news,\n      safe_title: response.safe_title,\n      transcript: response.transcript,\n      alt: response.alt,\n      img: response.img,\n      title: response.title,\n      day: response.day\n    }\n  });\n};\nexport const getPreviousComic = sentType => async (dispatch, getState) => {\n  let bs = buttonStore.getState();\n  const urlInt = parseInt(bs.num);\n  const url = 'https://xkcd.now.sh/?comic=' + (urlInt - 1);\n  console.log(url); // console.log(url);\n\n  const response = await fetch(url).then(res => res.json());\n  let num = parseInt(response.num);\n  buttonStore.dispatch({\n    type: \"PREVIOUS\",\n    payload: {\n      url: 'https://xkcd.now.sh/?comic=',\n      month: response.month,\n      num: num,\n      year: response.year,\n      news: response.news,\n      safe_title: response.safe_title,\n      transcript: response.transcript,\n      alt: response.alt,\n      img: response.img,\n      title: response.title,\n      day: response.day\n    }\n  });\n};\nexport const getNextComic = sentType => async (dispatch, getState) => {\n  let bs = buttonStore.getState();\n  const urlInt = parseInt(bs.num);\n  const url = 'https://xkcd.now.sh/?comic=' + (urlInt + 1);\n  const response = await fetch(url).then(res => res.json());\n  let num = parseInt(response.num);\n  buttonStore.dispatch({\n    type: \"NEXT\",\n    payload: {\n      url: 'https://xkcd.now.sh/?comic=',\n      month: response.month,\n      num: num,\n      year: response.year,\n      news: response.news,\n      safe_title: response.safe_title,\n      transcript: response.transcript,\n      alt: response.alt,\n      img: response.img,\n      title: response.title,\n      day: response.day\n    }\n  });\n};\nexport const getRandomComic = sentType => async (dispatch, getState) => {\n  let randomNum = Math.ceil(Math.random() * 100);\n  const url = 'https://xkcd.now.sh/?comic=' + randomNum;\n  const response = await fetch(url).then(res => res.json());\n  let num = parseInt(response.num);\n  buttonStore.dispatch({\n    type: sentType,\n    payload: {\n      url: 'https://xkcd.now.sh/?comic=',\n      month: response.month,\n      num: num,\n      year: response.year,\n      news: response.news,\n      safe_title: response.safe_title,\n      transcript: response.transcript,\n      alt: response.alt,\n      img: response.img,\n      title: response.title,\n      day: response.day\n    }\n  });\n};\nexport const getLastComic = sentType => async (dispatch, getState) => {\n  const url = 'https://xkcd.now.sh/?comic=latest';\n  const response = await fetch(url).then(res => res.json());\n  let num = parseInt(response.num);\n  buttonStore.dispatch({\n    type: sentType,\n    payload: {\n      url: 'https://xkcd.now.sh/?comic=',\n      month: response.month,\n      num: num,\n      year: response.year,\n      news: response.news,\n      safe_title: response.safe_title,\n      transcript: response.transcript,\n      alt: response.alt,\n      img: response.img,\n      title: response.title,\n      day: response.day\n    }\n  });\n};\n/**\n * The url link is always one ahead because we are decrementinig the num prop in the wrong spot.\n * The RESPONSE needs to be REQUESTED with the already decremented num prop.\n */\n// console.log(buttonStore.getState());\n// buttonStore.subscribe(() => {\n//     console.log(\"Store Changed!\", buttonStore.getState());\n// });","map":{"version":3,"sources":["/Users/jmay1126/WebProjects/ReactWebServer/Homepage/src/Data/asyncActions.js"],"names":["buttonStore","getFirstComic","sentType","dispatch","getState","url","response","fetch","then","res","json","console","log","num","parseInt","type","payload","month","year","news","safe_title","transcript","alt","img","title","day","getPreviousComic","bs","urlInt","getNextComic","getRandomComic","randomNum","Math","ceil","random","getLastComic"],"mappings":"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","sourcesContent":["import {buttonStore} from \"./store\";\n\n\n\n\n\n\nexport const getFirstComic = (sentType) => async (dispatch, getState) => {\n    const url = 'https://xkcd.now.sh/?comic=1';\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    console.log(response);\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\n\nexport const getPreviousComic = (sentType) => async (dispatch, getState) => {\n    let bs = buttonStore.getState();\n    const urlInt = parseInt(bs.num);\n    const url = 'https://xkcd.now.sh/?comic=' + (urlInt - 1);\n    console.log(url);\n    // console.log(url);\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: \"PREVIOUS\",\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\nexport const getNextComic = (sentType) => async (dispatch, getState) => {\n    let bs = buttonStore.getState();\n    const urlInt = parseInt(bs.num);\n    const url = 'https://xkcd.now.sh/?comic=' + (urlInt + 1);\n    const response = await fetch(url)\n        .then(res => res.json());\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: \"NEXT\",\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\nexport const getRandomComic = (sentType) => async (dispatch, getState) => {\n    let randomNum = (Math.ceil(Math.random() * 100));\n    const url = 'https://xkcd.now.sh/?comic=' + (randomNum);\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\nexport const getLastComic = (sentType) => async (dispatch, getState) => {\n    const url = 'https://xkcd.now.sh/?comic=latest';\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\n\n\n/**\n * The url link is always one ahead because we are decrementinig the num prop in the wrong spot.\n * The RESPONSE needs to be REQUESTED with the already decremented num prop.\n */\n\n// console.log(buttonStore.getState());\n\n// buttonStore.subscribe(() => {\n//     console.log(\"Store Changed!\", buttonStore.getState());\n// });\n"]},"metadata":{},"sourceType":"module"}