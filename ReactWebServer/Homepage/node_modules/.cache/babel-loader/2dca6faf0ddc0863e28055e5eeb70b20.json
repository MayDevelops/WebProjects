{"ast":null,"code":"var _jsxFileName = \"/Users/fms/Web Projects/ReactWebServer/Homepage/src/Components/FormEntry.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './FormEntry.css';\nimport { connect, useDispatch } from \"react-redux\";\nimport { addComment } from \"../Data/asyncActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormEntry = () => {\n  _s();\n\n  const [username, setUserName] = useState('');\n  const [userComment, setUserComment] = useState('');\n  const dispatch = useDispatch();\n\n  const handleAddComment = () => {\n    dispatch(addComment(\"ADD\", username, userComment));\n    setUserComment('');\n    cancelCourse();\n  };\n\n  const cancelCourse = () => {\n    document.getElementById(\"form\").reset();\n  };\n\n  if (username !== '' && userComment !== '') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => setUserName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: event => setUserComment(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bottomFormSpacer\",\n        onClick: handleAddComment,\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => setUserName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"What Do You Have To Say...\",\n          onChange: event => setUserComment(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(FormEntry, \"SOIxFyD4//HEoRN5aZJLBYIAtXE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FormEntry;\n\nconst mapStateToProps = state => ({\n  comments: state.comments\n});\n\nexport const a = connect(mapStateToProps)(FormEntry);\n\nvar _c;\n\n$RefreshReg$(_c, \"FormEntry\");","map":{"version":3,"sources":["/Users/fms/Web Projects/ReactWebServer/Homepage/src/Components/FormEntry.jsx"],"names":["React","useState","connect","useDispatch","addComment","FormEntry","username","setUserName","userComment","setUserComment","dispatch","handleAddComment","cancelCourse","document","getElementById","reset","event","target","value","mapStateToProps","state","comments","a"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,iBAAP;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,aAAnC;AACA,SAAQC,UAAR,QAAyB,sBAAzB;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMS,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,gBAAgB,GAAG,MAAM;AAC3BD,IAAAA,QAAQ,CAACN,UAAU,CAAC,KAAD,EAAQE,QAAR,EAAkBE,WAAlB,CAAX,CAAR;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAG,IAAAA,YAAY;AACf,GAJD;;AAMA,QAAMA,YAAY,GAAG,MAAM;AACvBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC;AACH,GAFD;;AAKA,MAAIT,QAAQ,KAAK,EAAb,IAAmBE,WAAW,KAAK,EAAvC,EAA2C;AACvC,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA,+BACI;AAAA,2CAEI;AAAO,YAAA,QAAQ,EAAEQ,KAAK,IAAIT,WAAW,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA,+BACI;AAAA,iCACD;AAAU,YAAA,QAAQ,EAAEF,KAAK,IAAIP,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA3C;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAEP,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH,GAlBD,MAkBO;AACH,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA,+BACI;AAAA,2CAEI;AAAO,YAAA,QAAQ,EAAEK,KAAK,IAAIT,WAAW,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,+BACI;AAAU,UAAA,WAAW,EAAC,4BAAtB;AACU,UAAA,QAAQ,EAAEF,KAAK,IAAIP,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd;AAD3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;AAGJ,CArDM;;GAAMb,S;UAIQF,W;;;KAJRE,S;;AAuDb,MAAMc,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,QAAQ,EAAED,KAAK,CAACC;AADc,CAAL,CAA7B;;AAIA,OAAO,MAAMC,CAAC,GAAGpB,OAAO,CAACiB,eAAD,CAAP,CAAyBd,SAAzB,CAAV","sourcesContent":["import React, {useState} from 'react';\nimport './FormEntry.css';\nimport {connect, useDispatch} from \"react-redux\";\nimport {addComment} from \"../Data/asyncActions\";\n\nexport const FormEntry = () => {\n    const [username, setUserName] = useState('');\n    const [userComment, setUserComment] = useState('')\n\n    const dispatch = useDispatch();\n\n    const handleAddComment = () => {\n        dispatch(addComment(\"ADD\", username, userComment));\n        setUserComment('');\n        cancelCourse();\n    }\n\n    const cancelCourse = () => {\n        document.getElementById(\"form\").reset();\n    }\n\n\n    if (username !== '' && userComment !== '') {\n        return (\n            <div className=\"formWrapper\">\n                <form>\n                    <label>\n                        Name:\n                        <input onChange={event => setUserName(event.target.value)}/>\n                    </label>\n                </form>\n                <form id=\"form\">\n                    <input>\n                   <textarea onChange={event => setUserComment(event.target.value)}/>\n                    </input>\n                </form>\n                <button className=\"bottomFormSpacer\" onClick={handleAddComment}>Submit Comment</button>\n            </div>\n\n        );\n    } else {\n        return (\n            <div className=\"formWrapper\">\n                <form>\n                    <label>\n                        Name:\n                        <input onChange={event => setUserName(event.target.value)}/>\n                    </label>\n                </form>\n                <form>\n                    <textarea placeholder=\"What Do You Have To Say...\"\n                              onChange={event => setUserComment(event.target.value)}/>\n                </form>\n            </div>\n        );\n    }\n\n\n};\n\nconst mapStateToProps = state => ({\n    comments: state.comments\n});\n\nexport const a = connect(mapStateToProps)(FormEntry);\n"]},"metadata":{},"sourceType":"module"}