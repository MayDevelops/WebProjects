{"ast":null,"code":"var _jsxFileName = \"/Users/fms/Web Projects/ReactWebServer/Homepage/src/Components/AverageStars.jsx\";\nimport React, { Component } from 'react';\nimport './AverageStars.css';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AverageStars extends Component {\n  render() {\n    let ratings = this.props.ratings;\n    let i;\n    let comicNumber = this.props.num;\n    let averageStars = 0;\n    let numRatingsThisComic = 0;\n    let ratingsExist = false;\n    if (ratings.length > 1) for (i = 1; i < ratings.length; i++) {\n      console.log('ComicNumber: ' + comicNumber);\n      console.log('Ratings[i].comicNum: ' + ratings[i].comicNum);\n\n      if (comicNumber === ratings[i].comicNum) {\n        averageStars += ratings[i].stars;\n        numRatingsThisComic++;\n        ratingsExist = true;\n      }\n    }\n\n    if (!ratingsExist) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ratingWrapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    } else {\n      averageStars = (averageStars / numRatingsThisComic).toFixed(2);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ratingWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Average rating: \", averageStars, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    num: state.num,\n    ratings: state.ratings\n  };\n};\n\nexport default connect(mapStateToProps, null)(AverageStars);","map":{"version":3,"sources":["/Users/fms/Web Projects/ReactWebServer/Homepage/src/Components/AverageStars.jsx"],"names":["React","Component","connect","AverageStars","render","ratings","props","i","comicNumber","num","averageStars","numRatingsThisComic","ratingsExist","length","console","log","comicNum","stars","toFixed","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,oBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACjCG,EAAAA,MAAM,GAAG;AACL,QAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAzB;AACA,QAAIE,CAAJ;AACA,QAAIC,WAAW,GAAG,KAAKF,KAAL,CAAWG,GAA7B;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,mBAAmB,GAAG,CAA1B;AACA,QAAIC,YAAY,GAAG,KAAnB;AAEA,QAAIP,OAAO,CAACQ,MAAR,GAAiB,CAArB,EACI,KAAKN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,OAAO,CAACQ,MAAxB,EAAgCN,CAAC,EAAjC,EAAqC;AACjCO,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBP,WAA9B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BV,OAAO,CAACE,CAAD,CAAP,CAAWS,QAAjD;;AACA,UAAIR,WAAW,KAAKH,OAAO,CAACE,CAAD,CAAP,CAAWS,QAA/B,EAAyC;AACrCN,QAAAA,YAAY,IAAIL,OAAO,CAACE,CAAD,CAAP,CAAWU,KAA3B;AACAN,QAAAA,mBAAmB;AACnBC,QAAAA,YAAY,GAAG,IAAf;AACH;AACJ;;AAEL,QAAI,CAACA,YAAL,EAAmB;AACf,0BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AAIH,KALD,MAKO;AACHF,MAAAA,YAAY,GAAG,CAACA,YAAY,GAAGC,mBAAhB,EAAqCO,OAArC,CAA6C,CAA7C,CAAf;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AAAA,0CAAwBR,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AAEJ;;AAlCgC;;AAmCpC;;AAED,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHX,IAAAA,GAAG,EAAEW,KAAK,CAACX,GADR;AAEHJ,IAAAA,OAAO,EAAEe,KAAK,CAACf;AAFZ,GAAP;AAIH,CALD;;AAOA,eAAeH,OAAO,CAACiB,eAAD,EAAkB,IAAlB,CAAP,CAA+BhB,YAA/B,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport './AverageStars.css';\nimport {connect} from 'react-redux';\n\nclass AverageStars extends Component {\n    render() {\n        let ratings = this.props.ratings;\n        let i;\n        let comicNumber = this.props.num;\n        let averageStars = 0;\n        let numRatingsThisComic = 0;\n        let ratingsExist = false;\n\n        if (ratings.length > 1)\n            for (i = 1; i < ratings.length; i++) {\n                console.log('ComicNumber: ' + comicNumber);\n                console.log('Ratings[i].comicNum: ' + ratings[i].comicNum);\n                if (comicNumber === ratings[i].comicNum) {\n                    averageStars += ratings[i].stars;\n                    numRatingsThisComic++;\n                    ratingsExist = true;\n                }\n            }\n\n        if (!ratingsExist) {\n            return (\n                <div className=\"ratingWrapper\">\n                </div>\n            )\n        } else {\n            averageStars = (averageStars / numRatingsThisComic).toFixed(2);\n            return (\n                <div className=\"ratingWrapper\">\n                    <span> Average rating: {averageStars} </span>\n                </div>\n            )\n        }\n\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        num: state.num,\n        ratings: state.ratings\n    };\n};\n\nexport default connect(mapStateToProps, null)(AverageStars);\n"]},"metadata":{},"sourceType":"module"}