{"ast":null,"code":"var _jsxFileName = \"/Users/jmay1126/WebProjects/ReactWebServer/Homepage/src/Components/StarRating.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { connect, useDispatch } from \"react-redux\";\nimport { FormEntry } from \"./FormEntry\";\nimport { addComment, addStars } from \"../Data/asyncActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: '#ff6d75'\n  },\n  iconHover: {\n    color: '#ff3d47'\n  }\n})(Rating);\nconst customIcons = {\n  1: {\n    icon: /*#__PURE__*/_jsxDEV(SentimentVeryDissatisfiedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this),\n    label: 'Very Dissatisfied'\n  },\n  2: {\n    icon: /*#__PURE__*/_jsxDEV(SentimentDissatisfiedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this),\n    label: 'Dissatisfied'\n  },\n  3: {\n    icon: /*#__PURE__*/_jsxDEV(SentimentSatisfiedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this),\n    label: 'Neutral'\n  },\n  4: {\n    icon: /*#__PURE__*/_jsxDEV(SentimentSatisfiedAltIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this),\n    label: 'Satisfied'\n  },\n  5: {\n    icon: /*#__PURE__*/_jsxDEV(SentimentVerySatisfiedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this),\n    label: 'Very Satisfied'\n  }\n};\n\nfunction IconContainer(props) {\n  const {\n    value,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"span\", { ...other,\n    children: customIcons[value].icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n}\n\n_c = IconContainer;\nIconContainer.propTypes = {\n  value: PropTypes.number.isRequired\n};\n\nfunction printValue(props) {\n  const starValue = props.target.attributes[1].value;\n  let str = starValue.substring(17, starValue.length);\n  console.log(str);\n}\n\nexport const CustomizedRatings = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const handleAddStars = props => {\n    const starValue = props.target.attributes[1].value;\n    let stars = starValue.substring(17, starValue.length);\n\n    if (stars !== '') {\n      switch (stars) {\n        case '4-5':\n          {\n            dispatch(addStars(\"ADD_STARS\", '4.5'));\n          }\n          break;\n\n        case '3-5':\n          {\n            dispatch(addStars(\"ADD_STARS\", '3.5'));\n          }\n          break;\n\n        case '2-5':\n          {\n            dispatch(addStars(\"ADD_STARS\", '2.5'));\n          }\n          break;\n\n        case '1-5':\n          {\n            dispatch(addStars(\"ADD_STARS\", '1.5'));\n          }\n          break;\n\n        case '0-5':\n          {\n            dispatch(addStars(\"ADD_STARS\", '0.5'));\n          }\n          break;\n\n        default:\n          {\n            dispatch(addStars(\"ADD_STARS\", stars));\n          }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"fieldset\",\n      mb: 3,\n      borderColor: \"transparent\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"legend\",\n        children: \"Custom empty icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {\n        onClick: handleAddStars,\n        name: \"customized-empty\",\n        defaultValue: 2,\n        precision: 0.5,\n        emptyIcon: /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomizedRatings, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = CustomizedRatings;\n\nconst mapStateToProps = state => ({\n  rating: state.rating\n});\n\nexport const a = connect(mapStateToProps)(CustomizedRatings);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IconContainer\");\n$RefreshReg$(_c2, \"CustomizedRatings\");","map":{"version":3,"sources":["/Users/jmay1126/WebProjects/ReactWebServer/Homepage/src/Components/StarRating.jsx"],"names":["React","PropTypes","withStyles","Rating","StarBorderIcon","FavoriteIcon","SentimentVeryDissatisfiedIcon","SentimentDissatisfiedIcon","SentimentSatisfiedIcon","SentimentSatisfiedAltIcon","SentimentVerySatisfiedIcon","Typography","Box","connect","useDispatch","FormEntry","addComment","addStars","StyledRating","iconFilled","color","iconHover","customIcons","icon","label","IconContainer","props","value","other","propTypes","number","isRequired","printValue","starValue","target","attributes","str","substring","length","console","log","CustomizedRatings","dispatch","handleAddStars","stars","mapStateToProps","state","rating","a"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport {connect, useDispatch} from \"react-redux\";\nimport {FormEntry} from \"./FormEntry\";\nimport {addComment, addStars} from \"../Data/asyncActions\";\n\n\nconst StyledRating = withStyles({\n    iconFilled: {\n        color: '#ff6d75',\n    },\n    iconHover: {\n        color: '#ff3d47',\n    },\n})(Rating);\n\nconst customIcons = {\n    1: {\n        icon: <SentimentVeryDissatisfiedIcon/>,\n        label: 'Very Dissatisfied',\n    },\n    2: {\n        icon: <SentimentDissatisfiedIcon/>,\n        label: 'Dissatisfied',\n    },\n    3: {\n        icon: <SentimentSatisfiedIcon/>,\n        label: 'Neutral',\n    },\n    4: {\n        icon: <SentimentSatisfiedAltIcon/>,\n        label: 'Satisfied',\n    },\n    5: {\n        icon: <SentimentVerySatisfiedIcon/>,\n        label: 'Very Satisfied',\n    },\n};\n\nfunction IconContainer(props) {\n    const {value, ...other} = props;\n    return <span {...other}>{customIcons[value].icon}</span>;\n}\n\nIconContainer.propTypes = {\n    value: PropTypes.number.isRequired,\n};\n\nfunction printValue(props) {\n    const starValue = props.target.attributes[1].value;\n    let str = starValue.substring(17, starValue.length);\n    console.log(str)\n}\n\n\nexport const CustomizedRatings = () => {\n    const dispatch = useDispatch();\n\n    const handleAddStars = (props) => {\n        const starValue = props.target.attributes[1].value;\n        let stars = starValue.substring(17, starValue.length);\n        if (stars !== '') {\n            switch (stars) {\n                case '4-5': {\n                    dispatch(addStars(\"ADD_STARS\", '4.5'));\n                }\n                break;\n                case '3-5': {\n                    dispatch(addStars(\"ADD_STARS\", '3.5'));\n                }\n                break;\n                case '2-5': {\n                    dispatch(addStars(\"ADD_STARS\", '2.5'));\n                }\n                break;\n                case '1-5': {\n                    dispatch(addStars(\"ADD_STARS\", '1.5'));\n                }\n                break;\n                case '0-5': {\n                    dispatch(addStars(\"ADD_STARS\", '0.5'));\n                }\n                break;\n                default: {\n                    dispatch(addStars(\"ADD_STARS\", stars));\n                }\n            }\n\n        }\n    }\n    return (\n        <div>\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                <Typography component=\"legend\">Custom empty icon</Typography>\n                <Rating\n                    onClick={handleAddStars}\n                    name=\"customized-empty\"\n                    defaultValue={2}\n                    precision={0.5}\n                    emptyIcon={<StarBorderIcon fontSize=\"inherit\"/>}\n                />\n            </Box>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    rating: state.rating\n});\n\nexport const a = connect(mapStateToProps)(CustomizedRatings);"]},"metadata":{},"sourceType":"module"}