{"ast":null,"code":"var _jsxFileName = \"/Users/fms/Web Projects/ReactWebServer/Homepage/src/Components/AverageStars.jsx\";\nimport React, { Component } from 'react';\nimport './AverageStars.css';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AverageStars extends Component {\n  render() {\n    let ratings = this.props.ratings;\n    let i;\n    let comicNumber = this.props.num;\n    let averageStars = 0;\n    let numRatingsThisComic = 0;\n    if (ratings.length > 1) for (i = 1; i < ratings.length; i++) {\n      console.log('ComicNumber: ' + comicNumber);\n      console.log('Ratings[i].comicNum: ' + ratings[i].comicNum);\n\n      if (comicNumber === ratings[i].comicNum) {\n        averageStars += ratings[i].stars;\n        numRatingsThisComic++;\n      }\n    }\n\n    if (ratings.length < 1) {\n      averageStars = 0;\n    } else {\n      averageStars = (averageStars / numRatingsThisComic).toFixed(2);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ratingWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" Average rating: \", averageStars, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    num: state.num,\n    ratings: state.ratings\n  };\n};\n\nexport default connect(mapStateToProps, null)(AverageStars);","map":{"version":3,"sources":["/Users/fms/Web Projects/ReactWebServer/Homepage/src/Components/AverageStars.jsx"],"names":["React","Component","connect","AverageStars","render","ratings","props","i","comicNumber","num","averageStars","numRatingsThisComic","length","console","log","comicNum","stars","toFixed","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,oBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACjCG,EAAAA,MAAM,GAAG;AACL,QAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAzB;AACA,QAAIE,CAAJ;AACA,QAAIC,WAAW,GAAG,KAAKF,KAAL,CAAWG,GAA7B;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,mBAAmB,GAAG,CAA1B;AAEA,QAAGN,OAAO,CAACO,MAAR,GAAiB,CAApB,EACA,KAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,OAAO,CAACO,MAAxB,EAAgCL,CAAC,EAAjC,EAAqC;AACjCM,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBN,WAA9B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BT,OAAO,CAACE,CAAD,CAAP,CAAWQ,QAAjD;;AACA,UAAIP,WAAW,KAAKH,OAAO,CAACE,CAAD,CAAP,CAAWQ,QAA/B,EAAyC;AACrCL,QAAAA,YAAY,IAAIL,OAAO,CAACE,CAAD,CAAP,CAAWS,KAA3B;AACAL,QAAAA,mBAAmB;AACtB;AACJ;;AAED,QAAGN,OAAO,CAACO,MAAR,GAAiB,CAApB,EAAuB;AACnBF,MAAAA,YAAY,GAAG,CAAf;AACH,KAFD,MAEO;AACHA,MAAAA,YAAY,GAAG,CAACA,YAAY,GAAGC,mBAAhB,EAAqCM,OAArC,CAA6C,CAA7C,CAAf;AACH;;AAGD,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACG;AAAA,wCAAwBP,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA9BgC;;AA+BpC;;AAED,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,GAAG,EAAEU,KAAK,CAACV,GADR;AAEHJ,IAAAA,OAAO,EAAEc,KAAK,CAACd;AAFZ,GAAP;AAIH,CALD;;AAOA,eAAeH,OAAO,CAACgB,eAAD,EAAkB,IAAlB,CAAP,CAA+Bf,YAA/B,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport './AverageStars.css';\nimport {connect} from 'react-redux';\n\nclass AverageStars extends Component {\n    render() {\n        let ratings = this.props.ratings;\n        let i;\n        let comicNumber = this.props.num;\n        let averageStars = 0;\n        let numRatingsThisComic = 0;\n\n        if(ratings.length > 1)\n        for (i = 1; i < ratings.length; i++) {\n            console.log('ComicNumber: ' + comicNumber);\n            console.log('Ratings[i].comicNum: ' + ratings[i].comicNum);\n            if (comicNumber === ratings[i].comicNum) {\n                averageStars += ratings[i].stars;\n                numRatingsThisComic++;\n            }\n        }\n\n        if(ratings.length < 1) {\n            averageStars = 0;\n        } else {\n            averageStars = (averageStars / numRatingsThisComic).toFixed(2);\n        }\n\n\n        return (\n            <div className=\"ratingWrapper\">\n               <span> Average rating: {averageStars} </span>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        num: state.num,\n        ratings: state.ratings\n    };\n};\n\nexport default connect(mapStateToProps, null)(AverageStars);\n"]},"metadata":{},"sourceType":"module"}