{"ast":null,"code":"var _jsxFileName = \"/Users/jmay1126/WebProjects/ReactWebServer/Homepage/src/Components/FormEntry.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect, useDispatch } from \"react-redux\";\nimport { addComment } from \"../Data/asyncActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormEntry = () => {\n  _s();\n\n  const [username, setUserName] = useState('');\n  const [userComment, setUserComment] = useState('');\n  const dispatch = useDispatch();\n\n  const handleAddComment = () => {\n    dispatch(addComment(\"ADD\", username, userComment));\n    setUserName('');\n    setUserComment('');\n  };\n\n  if (username !== '' && userComment !== '') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => setUserName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => setUserComment(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [username, \" \", userComment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"SUBMIT NAMES BIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => setUserName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => setUserComment(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(FormEntry, \"SOIxFyD4//HEoRN5aZJLBYIAtXE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FormEntry;\n\nconst mapStateToProps = state => ({\n  comments: state.comments\n});\n\nexport const a = connect(mapStateToProps)(FormEntry);\n\nvar _c;\n\n$RefreshReg$(_c, \"FormEntry\");","map":{"version":3,"sources":["/Users/jmay1126/WebProjects/ReactWebServer/Homepage/src/Components/FormEntry.jsx"],"names":["React","useState","connect","useDispatch","addComment","FormEntry","username","setUserName","userComment","setUserComment","dispatch","handleAddComment","event","target","value","mapStateToProps","state","comments","a"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,aAAnC;AACA,SAAQC,UAAR,QAAyB,sBAAzB;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMS,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,gBAAgB,GAAG,MAAM;AAC3BD,IAAAA,QAAQ,CAACN,UAAU,CAAC,KAAD,EAAOE,QAAP,EAAiBE,WAAjB,CAAX,CAAR;AACAD,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACH,GAJD;;AAQI,MAAGH,QAAQ,KAAK,EAAb,IAAmBE,WAAW,KAAK,EAAtC,EAA0C;AACtC,wBACA;AAAA,8BACI;AAAA,+BACI;AAAA,2CAEI;AAAO,YAAA,QAAQ,EAAEI,KAAK,IAAIL,WAAW,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,+BACI;AAAA,8CAEI;AAAO,YAAA,QAAQ,EAAEF,KAAK,IAAIH,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI;AAAA,mBAAKR,QAAL,OAAgBE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AAAQ,QAAA,OAAO,EAAEG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAmBP,GApBG,MAoBG;AACC,wBACI;AAAA,8BACI;AAAA,+BACI;AAAA,2CAEI;AAAO,YAAA,QAAQ,EAAEC,KAAK,IAAIL,WAAW,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,+BACI;AAAA,8CAEI;AAAO,YAAA,QAAQ,EAAEF,KAAK,IAAIH,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;AAIR,CAvDM;;GAAMT,S;UAIQF,W;;;KAJRE,S;;AAyDb,MAAMU,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,QAAQ,EAAED,KAAK,CAACC;AADc,CAAL,CAA7B;;AAIA,OAAO,MAAMC,CAAC,GAAGhB,OAAO,CAACa,eAAD,CAAP,CAAyBV,SAAzB,CAAV","sourcesContent":["import React, {useState} from 'react';\nimport {connect, useDispatch} from \"react-redux\";\nimport {addComment} from \"../Data/asyncActions\";\n\nexport const FormEntry = () => {\n    const [username, setUserName] = useState('');\n    const [userComment, setUserComment] = useState('')\n\n    const dispatch = useDispatch();\n\n    const handleAddComment = () => {\n        dispatch(addComment(\"ADD\",username, userComment));\n        setUserName('');\n        setUserComment('');\n    }\n\n\n\n        if(username !== '' && userComment !== '') {\n            return (\n            <div>\n                <form>\n                    <label>\n                        Name:\n                        <input onChange={event => setUserName(event.target.value)}/>\n                    </label>\n                </form>\n                <form>\n                    <label>\n                        Comment:\n                        <input onChange={event => setUserComment(event.target.value)}/>\n                    </label>\n                </form>\n                <h1>{username} {userComment}</h1>\n                <button onClick={handleAddComment}>SUBMIT NAMES BIT</button>\n            </div>\n\n            );\n    } else {\n            return (\n                <div>\n                    <form>\n                        <label>\n                            Name:\n                            <input onChange={event => setUserName(event.target.value)}/>\n                        </label>\n                    </form>\n                    <form>\n                        <label>\n                            Comment:\n                            <input onChange={event => setUserComment(event.target.value)}/>\n                        </label>\n                    </form>\n                </div>\n            );\n        }\n\n\n\n};\n\nconst mapStateToProps = state => ({\n    comments: state.comments\n});\n\nexport const a = connect(mapStateToProps)(FormEntry);\n"]},"metadata":{},"sourceType":"module"}