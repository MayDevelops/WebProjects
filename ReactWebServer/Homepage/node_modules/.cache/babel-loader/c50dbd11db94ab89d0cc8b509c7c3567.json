{"ast":null,"code":"var _jsxFileName = \"/Users/jmay1126/WebProjects/ReactWebServer/Homepage/src/Components/ComicFetch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Child from \"./ComicDisplay\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ComicFetch = props => {\n  _s();\n\n  const [data, updateData] = useState();\n  useEffect(() => {\n    const getData = async () => {\n      const resp = await fetch(this.state.url);\n      const json = await resp.json();\n      updateData(json);\n    };\n\n    getData();\n  }, []);\n  const state = useSelector(state => state.url);\n  const dispatch = useDispatch();\n\n  const changeEvent = newEvent => {\n    dispatch(updateData(newEvent));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: state.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Child, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ComicFetch, \"XOEyFV7cffzq/9ODuioeygf+sII=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ComicFetch;\n\nconst mapStateToProps = state => {\n  return {\n    number: state.number,\n    url: state.url\n  };\n};\n\nconnect(mapStateToProps, null)(ComicFetch);\nexport default ComicFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComicFetch\");","map":{"version":3,"sources":["/Users/jmay1126/WebProjects/ReactWebServer/Homepage/src/Components/ComicFetch.jsx"],"names":["React","useEffect","useState","Child","connect","useDispatch","useSelector","ComicFetch","props","data","updateData","getData","resp","fetch","state","url","json","dispatch","changeEvent","newEvent","mapStateToProps","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,OAAR,EAAiBC,WAAjB,EAA8BC,WAA9B,QAAgD,aAAhD;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBR,QAAQ,EAAnC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,OAAO,GAAG,YAAY;AACxB,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,KAAKC,KAAL,CAAWC,GAAZ,CAAxB;AACA,YAAMC,IAAI,GAAG,MAAMJ,IAAI,CAACI,IAAL,EAAnB;AACAN,MAAAA,UAAU,CAACM,IAAD,CAAV;AACH,KAJD;;AAKAL,IAAAA,OAAO;AACV,GAPQ,EAON,EAPM,CAAT;AASA,QAAMG,KAAK,GAAGR,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,GAAhB,CAAzB;AACA,QAAME,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,QAAMa,WAAW,GAAIC,QAAD,IAAc;AAC9BF,IAAAA,QAAQ,CAACP,UAAU,CAACS,QAAD,CAAX,CAAR;AACH,GAFD;;AAIA,sBAAO;AAAA,4BACH;AAAA,gBAAKL,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEN;AAAb;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CArBD;;GAAMF,U;UAWYD,W,EACGD,W;;;KAZfE,U;;AAuBN,MAAMa,eAAe,GAAGN,KAAK,IAAI;AAC7B,SAAO;AACHO,IAAAA,MAAM,EAAEP,KAAK,CAACO,MADX;AAEHN,IAAAA,GAAG,EAAED,KAAK,CAACC;AAFR,GAAP;AAIH,CALD;;AAOAX,OAAO,CAACgB,eAAD,EAAkB,IAAlB,CAAP,CAA+Bb,UAA/B;AAEA,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Child from \"./ComicDisplay\";\nimport {connect, useDispatch, useSelector} from \"react-redux\";\n\nconst ComicFetch = (props) => {\n    const [data, updateData] = useState();\n    useEffect(() => {\n        const getData = async () => {\n            const resp = await fetch(this.state.url);\n            const json = await resp.json()\n            updateData(json);\n        }\n        getData();\n    }, []);\n\n    const state = useSelector(state => state.url);\n    const dispatch = useDispatch();\n    const changeEvent = (newEvent) => {\n        dispatch(updateData(newEvent))\n    }\n\n    return <div>\n        <h1>{state.url}</h1>\n        <Child data={data} />\n    </div>\n}\n\nconst mapStateToProps = state => {\n    return {\n        number: state.number,\n        url: state.url\n    };\n};\n\nconnect(mapStateToProps, null)(ComicFetch);\n\nexport default ComicFetch;"]},"metadata":{},"sourceType":"module"}