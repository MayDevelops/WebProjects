{"ast":null,"code":"const initialState = {\n  url: 'https://xkcd.now.sh/?comic=latest',\n  month: '',\n  number: 1,\n  year: '',\n  news: '',\n  safe_title: '',\n  transcript: '',\n  alt: '',\n  img: '',\n  title: '',\n  day: ''\n};\nexport const buttonReducer = function (state = initialState, action) {\n  switch (action.type) {\n    case \"PREVIOUS\":\n      if (state.number === 1) {\n        return state;\n      } else {\n        console.log('In previous State number: ' + state.number + '  state url: ' + state.url);\n        return { ...state,\n          number: state.number - 1,\n          url: 'https://xkcd.now.sh/?comic=' + (state.number - 1)\n        };\n      }\n\n    case \"NEXT\":\n      console.log('In next State number: ' + state.number + '  state url: ' + state.url);\n      return { ...state,\n        number: state.number + 1,\n        url: 'https://xkcd.now.sh/?comic=' + (state.number + 1)\n      };\n\n    case \"RANDOM\":\n      console.log('In math State number: ' + state.number + '  state url: ' + state.url);\n      let r = Math.ceil(Math.random() * 100);\n      return { ...state,\n        number: r,\n        url: 'https://xkcd.now.sh/?comic=' + r\n      };\n\n    default:\n      console.log('In default State number: ' + state.number + '  state url: ' + state.url);\n      return state;\n  }\n};\nexport const getComic = string => async (dispatch, getState) => {\n  console.log(string);\n  const url = getState().url;\n  console.log(url);\n  const response = await fetch(url).then(res => res.json());\n  console.log(response);\n};","map":{"version":3,"sources":["/Users/jmay1126/WebProjects/ReactWebServer/Homepage/src/Data/buttonReducer.js"],"names":["initialState","url","month","number","year","news","safe_title","transcript","alt","img","title","day","buttonReducer","state","action","type","console","log","r","Math","ceil","random","getComic","string","dispatch","getState","response","fetch","then","res","json"],"mappings":"AAEA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAE,mCADY;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,MAAM,EAAE,CAHS;AAIjBC,EAAAA,IAAI,EAAE,EAJW;AAKjBC,EAAAA,IAAI,EAAE,EALW;AAMjBC,EAAAA,UAAU,EAAE,EANK;AAOjBC,EAAAA,UAAU,EAAE,EAPK;AAQjBC,EAAAA,GAAG,EAAE,EARY;AASjBC,EAAAA,GAAG,EAAE,EATY;AAUjBC,EAAAA,KAAK,EAAE,EAVU;AAWjBC,EAAAA,GAAG,EAAE;AAXY,CAArB;AAcA,OAAO,MAAMC,aAAa,GAAG,UAAUC,KAAK,GAAGb,YAAlB,EAAgCc,MAAhC,EAAwC;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,UAAIF,KAAK,CAACV,MAAN,KAAiB,CAArB,EAAwB;AACpB,eAAOU,KAAP;AACH,OAFD,MAEO;AACHG,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BJ,KAAK,CAACV,MAArC,GAA8C,eAA9C,GAAgEU,KAAK,CAACZ,GAAlF;AACA,eAAQ,EACJ,GAAGY,KADC;AAEJV,UAAAA,MAAM,EAAEU,KAAK,CAACV,MAAN,GAAe,CAFnB;AAGJF,UAAAA,GAAG,EAAG,iCAAiCY,KAAK,CAACV,MAAN,GAAe,CAAhD;AAHF,SAAR;AAKH;;AACL,SAAK,MAAL;AACIa,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BJ,KAAK,CAACV,MAAjC,GAA0C,eAA1C,GAA4DU,KAAK,CAACZ,GAA9E;AACA,aAAO,EAAC,GAAGY,KAAJ;AAAWV,QAAAA,MAAM,EAAEU,KAAK,CAACV,MAAN,GAAe,CAAlC;AAAqCF,QAAAA,GAAG,EAAE,iCAAiCY,KAAK,CAACV,MAAN,GAAe,CAAhD;AAA1C,OAAP;;AACJ,SAAK,QAAL;AACIa,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BJ,KAAK,CAACV,MAAjC,GAA0C,eAA1C,GAA4DU,KAAK,CAACZ,GAA9E;AACA,UAAIiB,CAAC,GAAIC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,GAA1B,CAAT;AACA,aAAO,EAAC,GAAGR,KAAJ;AAAWV,QAAAA,MAAM,EAAEe,CAAnB;AAAsBjB,QAAAA,GAAG,EAAE,gCAAgCiB;AAA3D,OAAP;;AACJ;AACIF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BJ,KAAK,CAACV,MAApC,GAA6C,eAA7C,GAA+DU,KAAK,CAACZ,GAAjF;AACA,aAAOY,KAAP;AArBR;AAuBH,CAxBM;AA0BP,OAAO,MAAMS,QAAQ,GAAIC,MAAD,IAAY,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9DT,EAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACA,QAAMtB,GAAG,GAAGwB,QAAQ,GAAGxB,GAAvB;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACD,QAAMyB,QAAQ,GAAG,MAAMC,KAAK,CAAC1B,GAAD,CAAL,CACjB2B,IADiB,CACZC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADK,CAAvB;AAKAd,EAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACF,CAVM","sourcesContent":["\n\nconst initialState = {\n    url: 'https://xkcd.now.sh/?comic=latest',\n    month: '',\n    number: 1,\n    year: '',\n    news: '',\n    safe_title: '',\n    transcript: '',\n    alt: '',\n    img: '',\n    title: '',\n    day: ''\n}\n\nexport const buttonReducer = function (state = initialState, action) {\n    switch (action.type) {\n        case \"PREVIOUS\":\n            if (state.number === 1) {\n                return state;\n            } else {\n                console.log('In previous State number: ' + state.number + '  state url: ' + state.url);\n                return ({\n                    ...state,\n                    number: state.number - 1,\n                    url: ('https://xkcd.now.sh/?comic=' + (state.number - 1))\n                })\n            }\n        case \"NEXT\":\n            console.log('In next State number: ' + state.number + '  state url: ' + state.url);\n            return {...state, number: state.number + 1, url: 'https://xkcd.now.sh/?comic=' + (state.number + 1)};\n        case \"RANDOM\":\n            console.log('In math State number: ' + state.number + '  state url: ' + state.url);\n            let r = (Math.ceil(Math.random() * 100));\n            return {...state, number: r, url: 'https://xkcd.now.sh/?comic=' + r};\n        default:\n            console.log('In default State number: ' + state.number + '  state url: ' + state.url);\n            return state;\n    }\n};\n\nexport const getComic = (string) => async (dispatch, getState) => {\n    console.log(string);\n    const url = getState().url;\n    console.log(url);\n   const response = await fetch(url)\n        .then(res => res.json());\n\n  \n\n   console.log(response);\n}\n"]},"metadata":{},"sourceType":"module"}