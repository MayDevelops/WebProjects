{"version":3,"sources":["Components/Header.jsx","Data/buttonReducer.js","Data/store.js","Data/asyncActions.js","Components/ButtonSegment.jsx","Data/buttonContainer.js","Components/ComicDisplay.jsx","Components/FormEntry.jsx","Components/CommentsDisplay.jsx","Components/StarRating.jsx","Components/AverageStars.jsx","Components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","initialState","url","month","num","year","news","safe_title","transcript","alt","img","title","day","comments","ratings","buttonStore","createStore","state","action","type","payload","newComment","newRating","applyMiddleware","thunk","addStars","sentType","setRating","needsParsing","dispatch","getState","a","bs","comicNumber","parseInt","stars","comicNum","ButtonSegment","useDispatch","className","onClick","fetch","then","res","json","response","urlInt","randomNum","Math","ceil","random","ButtonContainer","connect","previousClick","nextClick","randomClick","ComicDisplay","number","this","props","src","Component","FormEntry","useState","username","setUserName","userComment","setUserComment","cancelCourse","document","getElementById","reset","onChange","event","target","value","id","userName","time","moment","format","addComment","CommentsDisplay","i","loopJS","length","dangerouslySetInnerHTML","__html","withStyles","iconFilled","color","iconHover","Rating","CustomizedRatings","Box","component","mb","borderColor","starValue","attributes","substring","name","defaultValue","precision","emptyIcon","fontSize","AverageStars","averageStars","numRatingsThisComic","ratingsExist","console","log","toFixed","Footer","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.556685cd.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n    return (\n        <div>\n            <h1>XDCD Browser</h1>\n        </div>\n    );\n};\n\nexport default Header;\n","const initialState = {\n    url: 'https://xkcd.now.sh/?comic=700',\n    month: '2',\n    num: 700,\n    year: '2010',\n    news: '',\n    safe_title: 'Complexion',\n    transcript: '',\n    alt: 'Why do all my attempts at science end with me being punched by Batman?  (P.S. benzoyl peroxide soap works great.)',\n    img: 'https://imgs.xkcd.com/comics/complexion.png',\n    title: 'Complexion',\n    day: '10',\n    comments: [{}],\n    ratings: [{}]\n}\n\nexport const buttonReducer = function (state = initialState, action) {\n    switch (action.type) {\n        case \"FIRST\":\n            return ({\n                ...state,\n                num: action.payload.num,\n                url: action.payload.url,\n                img: action.payload.img,\n                title: action.payload.title,\n                day: action.payload.day,\n                month: action.payload.month,\n                year: action.payload.year,\n                alt: action.payload.alt\n\n            })\n        case \"PREVIOUS\":\n            if (state.num === 1) {\n                return state;\n            } else {\n                return ({\n                    ...state,\n                    num: action.payload.num,\n                    url: action.payload.url,\n                    img: action.payload.img,\n                    title: action.payload.title,\n                    day: action.payload.day,\n                    month: action.payload.month,\n                    year: action.payload.year,\n                    alt: action.payload.alt\n                })\n            }\n        case \"NEXT\":\n            return ({\n                ...state,\n                num: action.payload.num,\n                url: action.payload.url,\n                img: action.payload.img,\n                title: action.payload.title,\n                day: action.payload.day,\n                month: action.payload.month,\n                year: action.payload.year,\n                alt: action.payload.alt\n            })\n        case \"RANDOM\":\n            return ({\n                ...state,\n                num: action.payload.num,\n                url: action.payload.url,\n                img: action.payload.img,\n                title: action.payload.title,\n                day: action.payload.day,\n                month: action.payload.month,\n                year: action.payload.year,\n                alt: action.payload.alt\n            })\n        case \"LAST\":\n            return ({\n                ...state,\n                num: action.payload.num,\n                url: action.payload.url,\n                img: action.payload.img,\n                title: action.payload.title,\n                day: action.payload.day,\n                month: action.payload.month,\n                year: action.payload.year,\n                alt: action.payload.alt\n            })\n        case \"ADD\":\n            return ({\n                ...state,\n                comments: [...state.comments, action.payload.newComment]\n            })\n        case \"ADD_STARS\":\n            return ({\n                ...state,\n                ratings: [...state.ratings, action.payload.newRating]\n            })\n        default:\n            return state;\n    }\n};","import { createStore } from 'redux';\nimport { buttonReducer} from \"./buttonReducer\";\nimport { applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\n\nexport const buttonStore = createStore(buttonReducer, applyMiddleware(thunk));","import {buttonStore} from \"./store\";\nimport moment from \"moment\";\n\nexport const getFirstComic = (sentType) => async (dispatch, getState) => {\n    const url = 'https://xkcd.now.sh/?comic=1';\n    const response = await fetch(url)\n        .then(res => res.json());\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\n\nexport const getPreviousComic = (sentType) => async (dispatch, getState) => {\n    let bs = buttonStore.getState();\n    const urlInt = parseInt(bs.num);\n    const url = 'https://xkcd.now.sh/?comic=' + (urlInt - 1);\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: \"PREVIOUS\",\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\nexport const getNextComic = (sentType) => async (dispatch, getState) => {\n    let bs = buttonStore.getState();\n    const urlInt = parseInt(bs.num);\n    const url = 'https://xkcd.now.sh/?comic=' + (urlInt + 1);\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: \"NEXT\",\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\nexport const getRandomComic = (sentType) => async (dispatch, getState) => {\n    let randomNum = (Math.ceil(Math.random() * 100));\n    const url = 'https://xkcd.now.sh/?comic=' + (randomNum);\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\n\nexport const getLastComic = (sentType) => async (dispatch, getState) => {\n    const url = 'https://xkcd.now.sh/?comic=latest';\n    const response = await fetch(url)\n        .then(res => res.json());\n\n    let num = parseInt(response.num);\n\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            url: 'https://xkcd.now.sh/?comic=',\n            month: response.month,\n            num: num,\n            year: response.year,\n            news: response.news,\n            safe_title: response.safe_title,\n            transcript: response.transcript,\n            alt: response.alt,\n            img: response.img,\n            title: response.title,\n            day: response.day\n        }\n    })\n}\n\nexport const addComment = (sentType, setUserName, setUserComment) => async (dispatch, getState) => {\n    let bs = buttonStore.getState();\n    const urlInt = parseInt(bs.num);\n\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            newComment: {\n                comicNum: urlInt,\n                userName: setUserName,\n                userComment: setUserComment,\n                time: moment().format('LLL')\n            }\n        }\n    })\n}\n\nexport const addStars = (sentType, setRating, needsParsing) => async (dispatch, getState) => {\n    let bs = buttonStore.getState();\n    let stars;\n    const comicNumber = parseInt(bs.num);\n    if (needsParsing) {\n        stars = parseInt(setRating);\n    } else {\n        stars = setRating;\n    }\n    buttonStore.dispatch({\n        type: sentType,\n        payload: {\n            newRating: {\n                comicNum: comicNumber,\n                stars: stars\n            }\n        }\n    })\n}\n","import React from 'react';\nimport './ButtonSegment.css';\nimport {getFirstComic, getLastComic, getNextComic, getPreviousComic, getRandomComic} from \"../Data/asyncActions\";\nimport {connect, useDispatch} from \"react-redux\";\n\nexport const ButtonSegment = () => {\n    const dispatch = useDispatch();\n\n    const handleFirstClick = () => {\n        dispatch(getFirstComic(\"FIRST\"));\n    }\n    const handlePreviousClick = () => {\n        dispatch(getPreviousComic(\"PREVIOUS\"));\n    }\n    const handleNextClick = () => {\n        dispatch(getNextComic(\"NEXT\"));\n    }\n    const handleRandomClick = () => {\n        dispatch(getRandomComic(\"RANDOM\"));\n    }\n    const handleLastClick = () => {\n        dispatch(getLastComic(\"LAST\"));\n    }\n\n    return (\n        <div className=\"buttonWrapper\">\n            <button onClick={handleFirstClick}>First</button>\n            <button onClick={handlePreviousClick}>Previous</button>\n            <button onClick={handleNextClick}>Next</button>\n            <button onClick={handleRandomClick}>Random</button>\n            <button onClick={handleLastClick}>Last</button>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    num: state.num,\n    url: state.url,\n    month: state.month,\n    year: state.year,\n    news: state.news,\n    safe_title: state.safe_title,\n    transcript: state.transcript,\n    alt: state.alt,\n    img: state.img,\n    title: state.title,\n    day: state.day\n});\n\nexport const a = connect(mapStateToProps)(ButtonSegment);","import {connect} from 'react-redux';\nimport {ButtonSegment} from '../Components/ButtonSegment';\n\nconst mapStateToProps = state => {\n    return {\n        num: state.num,\n        url: state.url,\n        month: state.month,\n        year: state.year,\n        news: state.news,\n        safe_title: state.safe_title,\n        transcript: state.transcript,\n        alt: state.alt,\n        img: state.img,\n        title: state.title,\n        day: state.day\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        previousClick: () => dispatch({type: 'PREVIOUS'}),\n        nextClick: () => dispatch({type: 'NEXT'}),\n        randomClick: () => dispatch({type: 'RANDOM'})\n    }\n};\nexport const ButtonContainer = connect(mapStateToProps, mapDispatchToProps)(ButtonSegment);","import React, {Component} from 'react';\nimport './ComicDisplay.css';\nimport {connect} from 'react-redux';\n\nclass ComicDisplay extends Component {\n    render() {\n        const number = this.props.num;\n        const day = this.props.day;\n        let month = this.props.month;\n        const year = this.props.year;\n\n        switch (month) {\n            case '1': {\n                month = \"January\";\n            }\n                break;\n            case '2': {\n                month = \"February\";\n            }\n                break;\n            case '3': {\n                month = \"March\";\n            }\n                break;\n            case '4': {\n                month = \"April\";\n            }\n                break;\n            case '5': {\n                month = \"May\";\n            }\n                break;\n            case '6': {\n                month = \"June\";\n            }\n                break;\n            case '7': {\n                month = \"July\";\n            }\n                break;\n            case '8': {\n                month = \"August\";\n            }\n                break;\n            case '9': {\n                month = \"September\";\n            }\n                break;\n            case '10': {\n                month = \"October\";\n            }\n                break;\n            case '11': {\n                month = \"November\";\n            }\n                break;\n            case '12': {\n                month = \"December\";\n            }\n                break;\n        }\n\n\n        return (\n            <div className=\"comicWrapper\">\n                <span>{this.props.title}</span>\n                <img src={this.props.img} alt=''/>\n                <span>{this.props.alt}</span>\n                <span>#{number}, drawn on {month} {day} {year}</span>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        num: state.num,\n        url: state.url,\n        img: state.img,\n        title: state.title,\n        day: state.day,\n        month: state.month,\n        year: state.year,\n        alt: state.alt\n    };\n};\n\nexport default connect(mapStateToProps, null)(ComicDisplay);\n","import React, {useState} from 'react';\nimport './FormEntry.css';\nimport {connect, useDispatch} from \"react-redux\";\nimport {addComment} from \"../Data/asyncActions\";\n\nexport const FormEntry = () => {\n    const [username, setUserName] = useState('');\n    const [userComment, setUserComment] = useState('')\n\n    const dispatch = useDispatch();\n\n    const handleAddComment = () => {\n        dispatch(addComment(\"ADD\", username, userComment));\n        setUserComment('');\n        cancelCourse();\n    }\n\n    const cancelCourse = () => {\n        document.getElementById(\"form\").reset();\n    }\n\n\n    if (username !== '' && userComment !== '') {\n        return (\n            <div className=\"formWrapper\">\n                <form>\n                    <label>\n                        Name:\n                        <input onChange={event => setUserName(event.target.value)}/>\n                    </label>\n                </form>\n                <form id=\"form\">\n                    <label>\n                        Comment:\n                        <input onChange={event => setUserComment(event.target.value)}/>\n                    </label>\n                </form>\n                <button className=\"bottomFormSpacer\" onClick={handleAddComment}>Submit Comment</button>\n            </div>\n\n        );\n    } else {\n        return (\n            <div className=\"formWrapper\">\n                <form>\n                    <label>\n                        Name:\n                        <input onChange={event => setUserName(event.target.value)}/>\n                    </label>\n                </form>\n                <form>\n                    <label>\n                        Comment:\n                        <input onChange={event => setUserComment(event.target.value)}/>\n                    </label>\n                </form>\n            </div>\n        );\n    }\n\n\n};\n\nconst mapStateToProps = state => ({\n    comments: state.comments\n});\n\nexport const a = connect(mapStateToProps)(FormEntry);\n","import React, {Component} from 'react';\nimport './CommentsDisplay.css';\nimport {connect} from 'react-redux';\n\nclass CommentsDisplay extends Component {\n    render() {\n        let comments = this.props.comments;\n        let loopJS = ''\n        let i;\n        let comicNumber = this.props.num;\n        for (i = 0; i < comments.length; i++) {\n            if (comicNumber === comments[i].comicNum) {\n                loopJS += '<ul>';\n                loopJS += '<li>';\n                loopJS += comments[i].userName + ' - ';\n                loopJS += comments[i].userComment;\n                loopJS += '<i>' + ' - ' + comments[i].time + '</i>'\n                loopJS += '</li>';\n                loopJS += '</ul>';\n\n            }\n\n        }\n        if (loopJS === '') {\n            return (\n                <div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"comments\">\n                    <div dangerouslySetInnerHTML={{__html: loopJS}}></div>\n                </div>\n            )\n        }\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        num: state.num,\n        comments: state.comments,\n    };\n};\n\nexport default connect(mapStateToProps, null)(CommentsDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\nimport Box from '@material-ui/core/Box';\n\nimport {connect, useDispatch} from \"react-redux\";\nimport {addStars} from \"../Data/asyncActions\";\nimport './StarRating.css';\n\n\nconst StyledRating = withStyles({\n    iconFilled: {\n        color: '#ff6d75',\n    },\n    iconHover: {\n        color: '#ff3d47',\n    },\n})(Rating);\n\nconst customIcons = {\n    1: {\n        icon: <SentimentVeryDissatisfiedIcon/>,\n        label: 'Very Dissatisfied',\n    },\n    2: {\n        icon: <SentimentDissatisfiedIcon/>,\n        label: 'Dissatisfied',\n    },\n    3: {\n        icon: <SentimentSatisfiedIcon/>,\n        label: 'Neutral',\n    },\n    4: {\n        icon: <SentimentSatisfiedAltIcon/>,\n        label: 'Satisfied',\n    },\n    5: {\n        icon: <SentimentVerySatisfiedIcon/>,\n        label: 'Very Satisfied',\n    },\n};\n\nfunction IconContainer(props) {\n    const {value, ...other} = props;\n    return <span {...other}>{customIcons[value].icon}</span>;\n}\n\nIconContainer.propTypes = {\n    value: PropTypes.number.isRequired,\n};\n\nexport const CustomizedRatings = () => {\n    const dispatch = useDispatch();\n\n    const handleAddStars = (props) => {\n        const starValue = props.target.attributes[1].value;\n        let stars = starValue.substring(17, starValue.length);\n        if (stars !== '') {\n            switch (stars) {\n                case '4-5': {\n                    dispatch(addStars(\"ADD_STARS\", 4.5, false));\n                }\n                    break;\n                case '3-5': {\n                    dispatch(addStars(\"ADD_STARS\", 3.5, false));\n                }\n                    break;\n                case '2-5': {\n                    dispatch(addStars(\"ADD_STARS\", 2.5, false));\n                }\n                    break;\n                case '1-5': {\n                    dispatch(addStars(\"ADD_STARS\", 1.5, false));\n                }\n                    break;\n                case '0-5': {\n                    dispatch(addStars(\"ADD_STARS\", 0.5, false));\n                }\n                    break;\n                default: {\n                    dispatch(addStars(\"ADD_STARS\", stars, true));\n                }\n            }\n        }\n    }\n    return (\n        <div className=\"ratingWrapper\">\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                <Rating\n                    onClick={handleAddStars}\n                    name=\"customized-empty\"\n                    defaultValue={5}\n                    precision={0.5}\n                    emptyIcon={<StarBorderIcon fontSize=\"inherit\"/>}\n                />\n            </Box>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    ratings: state.ratings\n});\n\nexport const a = connect(mapStateToProps)(CustomizedRatings);\n\n\n\n","import React, {Component} from 'react';\nimport './AverageStars.css';\nimport {connect} from 'react-redux';\n\nclass AverageStars extends Component {\n    render() {\n        let ratings = this.props.ratings;\n        let i;\n        let comicNumber = this.props.num;\n        let averageStars = 0;\n        let numRatingsThisComic = 0;\n        let ratingsExist = false;\n\n        if (ratings.length > 1)\n            for (i = 1; i < ratings.length; i++) {\n                console.log('ComicNumber: ' + comicNumber);\n                console.log('Ratings[i].comicNum: ' + ratings[i].comicNum);\n                if (comicNumber === ratings[i].comicNum) {\n                    averageStars += ratings[i].stars;\n                    numRatingsThisComic++;\n                    ratingsExist = true;\n                }\n            }\n\n        if (!ratingsExist) {\n            return (\n                <div className=\"ratingWrapper\">\n                </div>\n            )\n        } else {\n            averageStars = (averageStars / numRatingsThisComic).toFixed(2);\n            return (\n                <div className=\"ratingWrapper\">\n                    <span> Average rating: {averageStars} </span>\n                </div>\n            )\n        }\n\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        num: state.num,\n        ratings: state.ratings\n    };\n};\n\nexport default connect(mapStateToProps, null)(AverageStars);\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => {\n    return (\n        <div className=\"github\">\n            <a href=\"https://github.com/MayDevelops/WebProjects/tree/master/ReactWebServer/Homepage\">GitHub</a>\n        </div>\n    );\n};\n\nexport default Footer;\n","import './App.css';\nimport './Components/Header';\nimport Header from \"./Components/Header\";\nimport {ButtonContainer} from \"./Data/buttonContainer\";\nimport ComicDisplay from \"./Components/ComicDisplay\";\nimport {FormEntry} from \"./Components/FormEntry\";\nimport CommentsDisplay from \"./Components/CommentsDisplay\";\nimport {CustomizedRatings} from \"./Components/StarRating\";\nimport AverageStars from \"./Components/AverageStars\";\nimport Footer from \"./Components/Footer\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <ButtonContainer/>\n            <ComicDisplay/>\n            <CustomizedRatings/>\n            <AverageStars/>\n            <FormEntry/>\n            <CommentsDisplay/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport { buttonStore } from './Data/store';\n\n\n\nReactDOM.render(\n    <Provider store={buttonStore}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}